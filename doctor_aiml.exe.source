Imports System.Xml
Imports System.IO
Imports System.Threading
Module Module1
    Dim xmlDoc As New XmlDocument()
    Dim patternL As String = "", srai As String = "", templateL As String = "", that As String = ""
    Dim patternList As New DataTable
    Public fs As New FileStream("DOCTOR_AIML.log", FileMode.Create)
    Public tmp As TextWriter = Console.Out
    Public sw As New StreamWriter(fs)
    Public noorphan = 1
    Sub Main()
        'load all aiml in memorie
        sw.Close()

        Console.SetOut(tmp)
        Console.Title = "DOCTOR_AIML - 0.1 - moz4r"
        Console.ForegroundColor = ConsoleColor.Cyan

        logs("DOCTOR AIML  0.2")

        Console.ForegroundColor = ConsoleColor.Green
        Console.WriteLine("                 __                      (R) - full integrity report")
        Console.WriteLine("                | +|                     (U) - Tranform pattern to UPERCASE")
        Console.WriteLine("             ,,,|__|                     (D) - Delete duplicated entries")
        Console.WriteLine("             $$$ , ,                     (L) - Remove SRAI loops")
        Console.WriteLine("            $$C    >                     (Q) - it will break spacetime")
        Console.WriteLine("           $$$;  _<")
        Console.WriteLine("       _______/ /_        ___")
        Console.WriteLine("      |  |__` \~/o\  _,]-]___]----->")
        Console.WriteLine("      | /  \(  )  )\/.-//")
        Console.WriteLine("     _( \  )    / \  |")
        Console.WriteLine("      //| /   ,/   \/")
        Console.WriteLine("        '/   o \")
        Console.WriteLine("        /     o \")
        Console.WriteLine("       /______/\_\")
        Console.WriteLine("       \   ||   /")
        Console.WriteLine("        \  ||  /")
        Console.WriteLine("         \ || /")
        Console.WriteLine("         / )( \ ")
        Console.WriteLine("         |/  \|")
        Console.WriteLine("         :]  [:")
        Console.WriteLine("         o|  |o")
        Console.WriteLine("        /o|  |o\                      ")
        Console.WriteLine("        `-'  `-'")
        Console.ForegroundColor = ConsoleColor.Cyan



        '' Do something
        ''...
        Do
            Dim Key = Console.ReadKey(True).KeyChar
            If Key = "q" Then Environment.Exit(0)
            If Key = "r" Then LoadFiles()


            If Key = "u" Then
                Console.Clear()
                Console.WriteLine("NOT YET IMPLEMENTED")
            End If

            If Key = "d" Then
                Console.Clear()
                Console.WriteLine("NOT YET IMPLEMENTED")

            End If
            If Key = "l" Then
                Console.Clear()
                Console.WriteLine("NOT YET IMPLEMENTED")

            End If



        Loop




    End Sub
    Function LoadFiles() As Integer
        Console.Clear()
        logs("Loading AIML files into ram... wait")
        logs("")

        patternList.Columns.Add("FileNa")
        patternList.Columns.Add("pattern")
        patternList.Columns.Add("srai")
        patternList.Columns.Add("template")
        patternList.Columns.Add("that")
        Dim strPath As String = System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().CodeBase).Replace("file:\", "")

        'Dim di As New DirectoryInfo("C:\Users\moz4r\Documents\GitHub\inmoov\InmoovScript\bots\fr\aiml\")
        Dim di As New DirectoryInfo(strPath)
        ' Get a reference to each file in that directory.
        Dim fiArr As FileInfo() = di.GetFiles()
        ' Display the names of the files.
        Dim fri As FileInfo
        Dim i = 0
        Dim errorA = 1
        For Each fri In fiArr

            If Path.GetExtension(fri.FullName) = ".aiml" Then
                errorA = 0
                i += 1
                Try
                    xmlDoc.Load(fri.FullName)

                    Dim nodes As XmlNodeList = xmlDoc.DocumentElement.SelectNodes("/aiml/category")


                    For Each node As XmlNode In nodes
                        srai = ""
                        that = ""
                        templateL = ""

                        Try
                            srai = node.SelectSingleNode("template/srai").InnerXml
                            If srai = "<star />" Or srai = "<star/>" Then srai = ""
                            srai = srai.Replace("<star/>", "*").Replace("<star />", "*")
                        Catch ex As Exception
                            srai = ""
                        End Try

                        Try
                            that = node.SelectSingleNode("that").InnerXml
                            If that = "<star />" Or that = "<star/>" Then that = ""
                            that = that.Replace("<star/>", "*").Replace("<star />", "*")
                        Catch ex As Exception
                            that = ""
                        End Try
                        patternL = node.SelectSingleNode("pattern").InnerXml
                        templateL = node.SelectSingleNode("template").InnerXml
                        patternList.Rows.Add(fri.Name, patternL, srai, templateL, that)
                        'Console.WriteLine(that)
                    Next
                Catch ex As Exception
                    Console.ForegroundColor = ConsoleColor.Red
                    logs("Hey dude cannot parse : " & fri.Name)
                    logs(ex.Message)
                    Console.ForegroundColor = ConsoleColor.White
                    logs("")
                    logs("The doctor cannot continue, please fix it yourself and retry")
                    Console.WriteLine("press ""Q"" to go home")
                    errorA = 1
                    Exit For
                End Try
            End If
        Next fri

        If errorA = 0 And i > 0 Then
            Console.ForegroundColor = ConsoleColor.White
            logs(i & " Files loaded with a lot of succes")
            logs(" Say : AHHHHHHHHH and '33'")
            logs("  ")
            Thread.Sleep(2000)
            checkRedondencie()
            Thread.Sleep(1000)
            'checkOrphanSRAI()

        End If

        If i = 0 Then
            Console.ForegroundColor = ConsoleColor.White
            logs(" Found 0 aiml files dude ...")
        End If

    End Function

    Function checkRedondencie()
        Dim redond = 0
        Console.ForegroundColor = ConsoleColor.Cyan
        logs("Check for redondencies ...")
        Console.ForegroundColor = ConsoleColor.White



        Dim testQuery =
                 (From e In patternList.AsEnumerable()
                  Group e By Key = New With {.templateL = e("template")}.templateL,
                                   New With {.thatL = e("that")}.thatL,
                                   New With {.patternL = e("pattern")}.patternL Into Group Where Group.Count > 1
                  Select New With {patternL}
            )



        For Each dup In testQuery
            Console.WriteLine(dup.patternL)
            Dim result() As DataRow = patternList.Select("pattern = '" & dup.patternL & "'")

            ' Loop and display.
            For Each row As DataRow In result
                logs("( " & row(0) & " + " & row.Field(Of String)("FileNa") & " ) : " & row.Field(Of String)("pattern"))
                ' redond = 1
            Next


        Next
        If redond > 0 Then
            Console.ForegroundColor = ConsoleColor.Red
            logs("Wahoo there is redondancies, please fix them")

        Else
            logs("No redondencies, all is clean !")
        End If

    End Function



    Function checkOrphanSRAI()

        Dim redond = 0
        Console.ForegroundColor = ConsoleColor.Cyan
        Console.Clear()
        logs("Check for Orphans SRAI ...")

        Thread.Sleep(1000)
        Console.ForegroundColor = ConsoleColor.White
        Dim result() As DataRow = patternList.Select("srai <> ''")


        For Each row As DataRow In result
            'logs(row(0))
            Dim resultOrphan() As DataRow = patternList.Select("pattern = '" & row(0) & "'")

            ' Loop and display.
            Dim i = 0

            For Each rowOrphan As DataRow In resultOrphan


                i = 1
            Next

            If i = 0 Then
                noorphan = 0
                logs(row(0) & " > " & row(1))
            End If

        Next
        If noorphan = 0 Then
            Console.ForegroundColor = ConsoleColor.Red
            logs("Wahoo there is too much srai orphans, please fix it !")

        Else
            Console.ForegroundColor = ConsoleColor.Green
            logs("No orphans, all is clean !")
        End If
        Console.WriteLine(" ")
        Console.WriteLine("Logfile created, it is your work now... ")
        Console.ReadLine()
    End Function
    Function logs(msg As String) As Integer
        Using sw As StreamWriter = File.AppendText("DOCTOR_AIML.log")
            Console.SetOut(sw)
            Console.WriteLine(msg)
            Console.SetOut(tmp)
            Console.WriteLine(msg)

        End Using

    End Function
End Module
