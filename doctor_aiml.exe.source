Imports System.Xml
Imports System.IO
Imports System.Threading
Module Module1
    Dim xmlDoc As New XmlDocument()
    Dim patternL As String = "", sraiL As String = "", templateL As String = "", thatL As String = ""
    Dim patternList As New DataTable
    Public fs As New FileStream("DOCTOR_AIML.log", FileMode.Create)
    Public tmp As TextWriter = Console.Out
    Public sw As New StreamWriter(fs)
    Public noorphan = 1
    Public i = 0
    'Public strPath As String = System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().CodeBase).Replace("file:\", "")
    Public strPath As String = "C:\Users\agallot\Documents\GitHub\inmouv-france\inmoov\InmoovScript\inmoovVocal\bots\fr\aiml"

    Public rapport = 0
    Public errorA = 1
    Sub Main()
        'load all aiml in memorie
        sw.Close()

        Console.SetOut(tmp)
        Console.Title = "DOCTOR_AIML - 0.1 - moz4r"
        Console.ForegroundColor = ConsoleColor.Cyan

        logs("DOCTOR AIML  0.2")

        Console.ForegroundColor = ConsoleColor.Green
        Console.WriteLine("                 __                      (R) - full integrity report")
        Console.WriteLine("                | +|                     (I) - Indentation FIx")
        Console.WriteLine("             ,,,|__|                     (U) - Tranform pattern to UPERCASE")
        Console.WriteLine("             $$$ , ,                     (L) - Remove SRAI loops")
        Console.WriteLine("            $$C    >                     (Q) - it will break spacetime")
        Console.WriteLine("           $$$;  _<                      (D) - Delete duplicated entries")
        Console.WriteLine("       _______/ /_        ___")
        Console.WriteLine("      |  |__` \~/o\  _,]-]___]----->")
        Console.WriteLine("      | /  \(  )  )\/.-//")
        Console.WriteLine("     _( \  )    / \  |")
        Console.WriteLine("      //| /   ,/   \/")
        Console.WriteLine("        '/   o \")
        Console.WriteLine("        /     o \")
        Console.WriteLine("       /______/\_\")
        Console.WriteLine("       \   ||   /")
        Console.WriteLine("        \  ||  /")
        Console.WriteLine("         \ || /")
        Console.WriteLine("         / )( \ ")
        Console.WriteLine("         |/  \|")
        Console.WriteLine("         :]  [:")
        Console.WriteLine("         o|  |o")
        Console.WriteLine("        /o|  |o\                      ")
        Console.WriteLine("        `-'  `-'")
        Console.ForegroundColor = ConsoleColor.Cyan



        '' MENU
        ''...
        Do
            Dim Key = Console.ReadKey(True).KeyChar
            If Key = "q" Then Environment.Exit(0)
            If Key = "r" Then LoadFiles("rapport")
            If Key = "i" Then LoadFiles("indentation")

            If Key = "u" Then LoadFiles("ucase")

            If Key = "d" Then LoadFiles("Redondencie")

            If Key = "l" Then
                Console.Clear()
                Console.WriteLine("NOT YET IMPLEMENTED")

            End If



        Loop




    End Sub
    Function LoadFiles(Optional FunctionType = "0") As Integer

        Console.Clear()
        logs("Loading AIML files into ram... wait")
        logs("")

        patternList.Columns.Add("FileNa")
        patternList.Columns.Add("pattern")
        patternList.Columns.Add("srai")
        patternList.Columns.Add("template")
        patternList.Columns.Add("that")


        Dim di As New DirectoryInfo(strPath)
        'Dim di As New DirectoryInfo(strPath)
        ' Get a reference to each file in that directory.
        Dim fiArr As FileInfo() = di.GetFiles()
        ' Display the names of the files.
        Dim fri As FileInfo
        Dim rep
        For Each fri In fiArr
            rep = parse(fri, FunctionType)
            If rep = 0 Then Exit For


        Next fri

        If errorA = 0 And i > 0 Then
            Console.ForegroundColor = ConsoleColor.White
            logs("  ")
            logs(i & " Files loaded with a lot of succes")
            logs(" Say : AHHHHHHHHH and '33'")
            logs("  ")
            Thread.Sleep(2000)

            If FunctionType = "rapport" Or FunctionType = "Redondencie" Then

                checkRedondencie(FunctionType)
                Thread.Sleep(1000)
            End If
            'checkOrphanSRAI()

        End If

        If i = 0 Then
            Console.ForegroundColor = ConsoleColor.White
            logs(" Found 0 aiml files dude ...")
        End If

    End Function
    Function parse(fri, Optional FunctionType = "0", Optional FileN = "0", Optional pattern = "", Optional srai = "", Optional template = "", Optional that = "")
        Dim ext = ""
        Dim FriName = ""
        Dim FriFullName = ""

        If FileN = "0" Then
            ext = Path.GetExtension(fri.FullName)
            FriName = fri.Name
            FriFullName = fri.FullName
        Else
            ext = ".aiml"
            FriName = FileN
            FriFullName = strPath & "\" & FileN
        End If

        If ext = ".aiml" Then
            errorA = 0
            i += 1
            Console.WriteLine(FriName)

            Try
                xmlDoc.Load(FriFullName)
                Dim nodes As XmlNodeList = xmlDoc.DocumentElement.SelectNodes("/aiml/category")
                For Each node As XmlNode In nodes

                    sraiL = ""
                    thatL = ""
                    templateL = ""
                    patternL = ""

                    Try
                        sraiL = node.SelectSingleNode("template/srai").InnerXml
                        If sraiL = "<star />" Or sraiL = "<star/>" Then sraiL = ""
                        sraiL = sraiL.Replace("<star/>", "*").Replace("<star />", "*")
                    Catch ex As Exception
                        sraiL = ""
                    End Try

                    Try
                        thatL = node.SelectSingleNode("that").InnerXml
                        If thatL = "<star />" Or thatL = "<star/>" Then thatL = ""
                        thatL = thatL.Replace("<star/>", "*").Replace("<star />", "*")
                    Catch ex As Exception
                        thatL = ""
                    End Try
                    patternL = node.SelectSingleNode("pattern").InnerXml


                    If FunctionType = "ucase" Then
                        node.SelectSingleNode("pattern").InnerXml = patternL.ToUpper


                    End If
                    templateL = node.SelectSingleNode("template").InnerXml
                    patternList.Rows.Add(FriName, patternL, sraiL, templateL, thatL)


                    If FunctionType = "RedondencieMedication" Then
                        If patternL = pattern And templateL = template And thatL = that Then
                            node.ParentNode.RemoveChild(node)
                            Exit For
                        End If
                    End If


                Next

                If FunctionType = "indentation" Or FunctionType = "RedondencieMedication" Or FunctionType = "ucase" Then
                    System.IO.File.Delete(FriFullName)
                    xmlDoc.Save(FriFullName)
                    'Console.WriteLine(fri.FullName)
                    Console.ForegroundColor = ConsoleColor.Green
                    Console.WriteLine(FriName & " > MODIFICATIONS OK")
                    Console.ForegroundColor = ConsoleColor.White
                End If


            Catch ex As Exception
                Console.ForegroundColor = ConsoleColor.Red
                logs("Hey dude cannot parse :  " & FriName)
                logs(ex.Message)
                Console.ForegroundColor = ConsoleColor.White
                logs("")
                logs("The doctor cannot continue, please fix it yourself and retry")
                Console.WriteLine("press ""Q"" to go home")
                errorA = 1
                Return 0
            End Try

        End If
        Return 1
    End Function
    Function checkRedondencie(Optional FunctionType = "0")



        Dim redond = 0
        Console.ForegroundColor = ConsoleColor.Cyan
        logs("Check for redondencies ...")
        Console.ForegroundColor = ConsoleColor.White

        Dim query = From row In patternList.AsEnumerable()
                    Group row By Group = New With {
        Key .pattern = row("pattern"),
        Key .template = row("template"),
        Key .that = row("that")
   } Into NameGroup = Group Where NameGroup.Count > 1
                    Select New With {
       .pattern = Group.pattern,
        .that = Group.that,
       .template = Group.template}




        For Each dup In query


            Dim result() As DataRow = patternList.Select("pattern = '" & dup.pattern & "'")

            ' Loop and display.
            For Each row As DataRow In result.Take(1)
                logs("( File : " & row(0) & " ) :  ")
                logs("pattern:" & row.Field(Of String)("pattern"))
                logs("template:" & row.Field(Of String)("template"))
                logs("that:" & row.Field(Of String)("that"))
                logs("-----------------------")
                redond = 1
                If FunctionType = "Redondencie" Then parse(0, "RedondencieMedication", row(0), row.Field(Of String)("pattern"), "", row.Field(Of String)("template"), row.Field(Of String)("that"))
            Next

        Next
        If redond > 0 And FunctionType = "rapport" Then
            Console.ForegroundColor = ConsoleColor.Red
            logs("Wahoo there is redondancies, please fix them")

        Else
            logs("No redondencies, all is clean !")
        End If

    End Function



    Function checkOrphanSRAI()

        Dim redond = 0
        Console.ForegroundColor = ConsoleColor.Cyan
        Console.Clear()
        logs("Check for Orphans SRAI ...")

        Thread.Sleep(1000)
        Console.ForegroundColor = ConsoleColor.White
        Dim result() As DataRow = patternList.Select("srai <> ''")


        For Each row As DataRow In result
            'logs(row(0))
            Dim resultOrphan() As DataRow = patternList.Select("pattern = '" & row(0) & "'")

            ' Loop and display.
            Dim i = 0

            For Each rowOrphan As DataRow In resultOrphan


                i = 1
            Next

            If i = 0 Then
                noorphan = 0
                logs(row(0) & " > " & row(1))
            End If

        Next
        If noorphan = 0 Then
            Console.ForegroundColor = ConsoleColor.Red
            logs("Wahoo there is too much srai orphans, please fix it !")

        Else
            Console.ForegroundColor = ConsoleColor.Green
            logs("No orphans, all is clean !")
        End If
        Console.WriteLine(" ")
        Console.WriteLine("Logfile created, it is your work now... ")
        Console.ReadLine()
    End Function
    Function logs(msg As String) As Integer
        Using sw As StreamWriter = File.AppendText("DOCTOR_AIML.log")
            Console.SetOut(sw)
            Console.WriteLine(msg)
            Console.SetOut(tmp)
            Console.WriteLine(msg)

        End Using

    End Function
End Module
